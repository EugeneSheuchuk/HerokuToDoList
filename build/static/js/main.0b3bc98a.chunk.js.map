{"version":3,"sources":["components/Registration/Registration.module.css","components/Auth/Auth.module.css","components/Error/Error.module.css","components/Main/Main.module.css","components/Button/Button.module.css","components/Input/Input.module.css","components/Loading/Loading.module.css","components/Button/Button.jsx","components/Input/Input.jsx","API/serverAPI.js","components/Error/Error.jsx","components/list/List.jsx","assets/functions.js","components/Auth/Auth.jsx","components/Registration/Registration.jsx","components/App/App.jsx","components/Loading/Loading.jsx","components/Main/Main.jsx","index.js","components/list/List.module.css"],"names":["module","exports","Button","this","props","value","action","itemId","styleClass","data","button","type","onClick","e","className","style","Fragment","React","Component","Input","imputType","imputId","imputValue","focus","keyAction","blur","name","fieldType","placeholder","id","onChange","autoFocus","onKeyPress","onBlur","instance","axios","baseURL","withCredentials","API","get","listName","post","listId","delete","newListName","put","params","task","taskId","currentStatus","newTaskText","fields","Error","state","timerId","timer","errorText","setState","prevProps","prevState","snapshot","errorReset","setTimeout","status","taskView","all","complete","inProgress","List","componentDidMount","increaseLoadingTasksCount","index","then","res","isAuth","changeAuth","tasks","catch","err","isError","response","_onTypeText","newText","target","field","_onAddTask","preventDefault","trim","taskText","taskStatus","isEdit","switchLoading","_onChangeTaskStatus","_onFilterTasks","_onEditTask","tasksList","editField","forEach","item","_id","prevTextTask","editItemId","_onEditText","_onSaveEditTask","_onPressEnter","key","_onPressEnterToAddTask","_onBlurEditTask","_onDeleteTask","_onStartEditListHeader","currentName","isEditHeader","editListName","prevListName","_onEditHeader","_onSaveHeader","undefined","_onResetError","deleteList","listHeader","onDoubleClick","title","viewTasks","array","condition","copy","filter","filterArray","map","taskContainer","taskNumber","taskItem","taskButtons","filterButtons","push","display","tasksContainer","tasksFilter","viewComponent","listContainer","proposal","htmlFor","checkComponentFields","error","errorKey","charAt","toUpperCase","slice","email","search","Auth","_onSignUp","history","_onChangeField","pass","_sigIn","checkState","errorEmail","errorPass","to","auth_container","links","withRouter","Registration","surname","_sigUp","errorName","errorSurname","reg_container","App","lists","_onType","_onAddList","_onDeleteList","_onSaveNewListName","_onLogOut","alert","displayLists","appId","Loading","_prevent","stopPropagation","loadingdiv","Main","_changeAuth","_onSwitchLoadingData","isLoading","_onIncreaseLoadingTasksCount","count","newCount","loadingTasksCount","console","log","loadingView","main_container","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b3bc98a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"reg_container\":\"Registration_reg_container__wzEIp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth_container\":\"Auth_auth_container__35U4W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorText\":\"Error_errorText__3LEpv\",\"timer\":\"Error_timer__2oSXs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_container\":\"Main_main_container__1wyhU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeButton\":\"Button_activeButton__1h8u7\",\"addTaskButton\":\"Button_addTaskButton__1IrNC\",\"taskButton\":\"Button_taskButton__mXhrz\",\"link_button\":\"Button_link_button__1XK19\",\"reg_button\":\"Button_reg_button__3x6Do\",\"add_list_button\":\"Button_add_list_button__3QiTc\",\"logOutButton\":\"Button_logOutButton__380wU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskInput\":\"Input_taskInput__2gLIe\",\"add_list\":\"Input_add_list__i_MKP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingdiv\":\"Loading_loadingdiv__1fS1r\",\"loading\":\"Loading_loading__22KBI\"};","import React from 'react';\r\nimport style from './Button.module.css';\r\n\r\nclass Button extends React.Component {\r\n\r\n    render() {\r\n        const {value, action, itemId, styleClass, data} = this.props;\r\n        const button = styleClass\r\n            ?\r\n            <input type=\"button\" value={value} onClick={(e) => action({e, itemId, data})} className={`${style[styleClass]}`}/>\r\n            : <input type=\"button\" value={value} onClick={(e) => action({e, itemId, data})}/>;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {button}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;","import React from \"react\";\r\nimport style from './Input.module.css';\r\n\r\nclass Input extends React.Component {\r\n\r\n    render() {\r\n        const {\r\n            imputType = 'text', imputId, imputValue, action,\r\n            focus = false, keyAction = null, blur = null, name, fieldType = null, placeholder = null\r\n        } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <input type={imputType}\r\n                       id={imputId}\r\n                       value={imputValue}\r\n                       onChange={(e) => action(e, fieldType)}\r\n                       autoFocus={focus}\r\n                       onKeyPress={(e) => {\r\n                           if (keyAction) {\r\n                               keyAction(e);\r\n                           }\r\n                       }}\r\n                       onBlur={() => {\r\n                           if (blur) {\r\n                               blur();\r\n                           }\r\n                       }}\r\n                       className={`${style[name]}`}\r\n                       placeholder={placeholder}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Input;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: ' https://arcane-stream-95803.herokuapp.com',\r\n    withCredentials: true,\r\n});\r\n\r\nexport const API = {\r\n    getUserLists() {\r\n        return instance.get('main');\r\n    },\r\n    addList(listName) {\r\n        return instance.post('main', {listName});\r\n    },\r\n    deleteList(listId) {\r\n        return instance.delete('main', {data: {listId}});\r\n    },\r\n    updateListName(listId, newListName) {\r\n        return instance.put('main', {listId, newListName})\r\n    },\r\n    getListTasks(listId) {\r\n        return instance.get('tasks', {params: {listId}});\r\n    },\r\n    addNewTask(task) {\r\n        return instance.post('tasks', {task});\r\n    },\r\n    changeTaskStatus(listId, taskId, currentStatus) {\r\n        return instance.put('tasks', {listId, taskId, currentStatus});\r\n    },\r\n    changeTask(listId, taskId, newTaskText) {\r\n        return instance.put('tasks/editTask', {listId, taskId, newTaskText});\r\n    },\r\n    deleteTask(listId, taskId) {\r\n        return instance.delete('tasks', {data: {listId, taskId}});\r\n    },\r\n    isAuth() {\r\n        return instance.get('auth/isAuth');\r\n    },\r\n    auth(fields) {\r\n        return instance.post('auth/auth', {...fields});\r\n    },\r\n    registartionUser(fields) {\r\n        return instance.post('auth/registartion', {...fields});\r\n    },\r\n    logOut() {\r\n        return instance.put('auth/logout');\r\n    },\r\n};","import React from 'react';\r\nimport style from './Error.module.css';\r\n\r\nclass Error extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timerId: null,\r\n            timer: 0,\r\n            errorText: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {errorText} = this.props;\r\n        this.setState({timer: 5, errorText});\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const {timer} = this.state;\r\n        if (timer === 0) {\r\n            this.props.errorReset();\r\n        } else {\r\n            setTimeout(() => this.setState({timer: timer - 1}), 1000)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const errorText = this.state.errorText;\r\n        const timer = this.state.timer;\r\n        return (\r\n            <div>\r\n                <div className={style.errorText}>{errorText}</div>\r\n                <div>The error text will be clean after <span className={style.timer}>{timer}</span> seconds</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Error;","import React from 'react';\r\nimport style from './List.module.css';\r\nimport Button from \"../Button/Button\";\r\nimport {filterArray} from \"../../assets/functions\";\r\nimport Input from \"../Input/Input\";\r\nimport {API} from \"../../API/serverAPI\";\r\nimport Error from \"../Error/Error\";\r\n\r\nexport const status = {\r\n    complete: 'Complete',\r\n    inProcess: 'In progress',\r\n};\r\nexport const taskView = {\r\n    all: 'All',\r\n    complete: 'Complete',\r\n    inProgress: 'In progress',\r\n};\r\n\r\nclass List extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            field: '',\r\n            tasks: [],\r\n            taskView: taskView.all,\r\n            prevTextTask: '',\r\n            editField: '',\r\n            editItemId: null,\r\n            prevListName: '',\r\n            editListName: '',\r\n            isEditHeader: false,\r\n            isError: false,\r\n            errorText: ''\r\n        };\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        const {listId} = this.props;\r\n        setTimeout(() => {\r\n            this.props.increaseLoadingTasksCount(1);\r\n        }, this.props.index * 30);\r\n        API.getListTasks(listId)\r\n            .then(res => {\r\n                this.props.increaseLoadingTasksCount(-1);\r\n                if (!res.data.isAuth) return this.props.changeAuth({isAuth: res.data.isAuth});\r\n                this.setState({tasks: [...res.data.data]});\r\n            })\r\n            .catch(err => {\r\n                this.props.increaseLoadingTasksCount(-1);\r\n                this.setState({isError: true, errorText: err.response.data})\r\n            });\r\n    };\r\n\r\n    _onTypeText = (e) => {\r\n        const newText = e.target.value;\r\n        this.setState({field: newText});\r\n    };\r\n\r\n    _onAddTask = ({e}) => {\r\n        e.preventDefault();\r\n        const {listId} = this.props;\r\n        if (this.state.field.trim() === '') {\r\n            this.setState({isError: true, errorText: 'The field cannot be empty'});\r\n            return;\r\n        }\r\n        const task = {\r\n            taskText: this.state.field,\r\n            taskStatus: status.inProcess,\r\n            isEdit: false,\r\n            listId,\r\n        };\r\n        this.props.switchLoading();\r\n        API.addNewTask(task)\r\n            .then(res => {\r\n                this.props.switchLoading();\r\n                if (!res.data.isAuth) return this.props.changeAuth({isAuth: res.data.isAuth});\r\n                this.setState({field: '', tasks: [...res.data.data]})\r\n            })\r\n            .catch(err => {\r\n                this.props.switchLoading();\r\n                this.setState({isError: true, errorText: err.response.data});\r\n            });\r\n    };\r\n\r\n    _onChangeTaskStatus = ({e, itemId: taskId, data: currentStatus}) => {\r\n        e.preventDefault();\r\n        const {listId} = this.props;\r\n        this.props.switchLoading();\r\n        API.changeTaskStatus(listId, taskId, currentStatus)\r\n            .then(res => {\r\n                this.props.switchLoading();\r\n                if (!res.data.isAuth) return this.props.changeAuth({isAuth: res.data.isAuth});\r\n                this.setState({tasks: [...res.data.data]})\r\n            })\r\n            .catch(err => {\r\n                this.props.switchLoading();\r\n                this.setState({isError: true, errorText: err.response.data});\r\n            });\r\n    };\r\n\r\n    _onFilterTasks = ({e, itemId}) => {\r\n        e.preventDefault();\r\n        this.setState({taskView: itemId});\r\n    };\r\n\r\n    _onEditTask = ({e, taskId}) => {\r\n        e.preventDefault();\r\n        const tasksList = [...this.state.tasks];\r\n        let editField = '';\r\n        tasksList.forEach(item => {\r\n            if (item._id === taskId) {\r\n                item.isEdit = !item.isEdit;\r\n                editField = item.taskText;\r\n            }\r\n        });\r\n        this.setState({tasks: tasksList, editField, prevTextTask: editField, editItemId: taskId});\r\n    };\r\n\r\n    _onEditText = (e) => {\r\n        const newText = e.target.value;\r\n        this.setState({editField: newText});\r\n    };\r\n\r\n    _onSaveEditTask = () => {\r\n        const {listId} = this.props;\r\n        if (this.state.editField.trim() === '') {\r\n            this.setState({isError: true, errorText: 'The task text field cannot be empty'});\r\n            return;\r\n        }\r\n        if (this.state.prevTextTask === this.state.editField.trim()) {\r\n            const tasksList = [...this.state.tasks];\r\n            tasksList.forEach(item => {\r\n                if (item._id === this.state.editItemId) {\r\n                    item.isEdit = !item.isEdit;\r\n                }\r\n            });\r\n            this.setState({tasks: tasksList, editField: '', prevTextTask: '', editItemId: ''});\r\n            return;\r\n        }\r\n        this.props.switchLoading();\r\n        API.changeTask(listId, this.state.editItemId, this.state.editField)\r\n            .then(res => {\r\n                this.props.switchLoading();\r\n                if (!res.data.isAuth) return this.props.changeAuth({isAuth: res.data.isAuth});\r\n                this.setState({editField: '', prevTextTask: '', editItemId: null, tasks: [...res.data.data]});\r\n            })\r\n            .catch(err => {\r\n                this.props.switchLoading();\r\n                this.setState({isError: true, errorText: err.response.data});\r\n            });\r\n    };\r\n\r\n    _onPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this._onSaveEditTask();\r\n        }\r\n    };\r\n\r\n    _onPressEnterToAddTask = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this._onAddTask({e});\r\n        }\r\n    };\r\n\r\n    _onBlurEditTask = () => {\r\n        this._onSaveEditTask();\r\n    };\r\n\r\n    _onDeleteTask = ({e, itemId: taskId}) => {\r\n        e.preventDefault();\r\n        const {listId} = this.props;\r\n        this.props.switchLoading();\r\n        API.deleteTask(listId, taskId)\r\n            .then(res => {\r\n                this.props.switchLoading();\r\n                if (!res.data.isAuth) return this.props.changeAuth({isAuth: res.data.isAuth});\r\n                this.setState({tasks: [...res.data.data]});\r\n            })\r\n            .catch(err => {\r\n                this.props.switchLoading();\r\n                this.setState({isError: true, errorText: err.response.data});\r\n            });\r\n    };\r\n\r\n    _onStartEditListHeader = (currentName) => {\r\n        this.setState({\r\n            isEditHeader: !this.state.isEditHeader,\r\n            editListName: currentName, prevListName: currentName\r\n        });\r\n    };\r\n\r\n    _onEditHeader = (e) => {\r\n        const newText = e.target.value;\r\n        this.setState({editListName: newText});\r\n    };\r\n\r\n    _onSaveHeader = (e) => {\r\n        if (e === undefined || e.key === 'Enter') {\r\n            this.props.editListName(this.props.listId, this.state.editListName, this.state.prevListName);\r\n            this.setState({editListName: '', isEditHeader: !this.state.isEditHeader, prevListName: ''});\r\n        }\r\n    };\r\n\r\n    _onResetError = () => {\r\n        this.setState({isError: false, errorText: ''});\r\n    };\r\n\r\n    render() {\r\n        const {listName, listId, deleteList} = this.props;\r\n        const listHeader = this.state.isEditHeader\r\n            ? <Input imputValue={this.state.editListName}\r\n                     focus={true}\r\n                     action={this._onEditHeader}\r\n                     keyAction={this._onSaveHeader}\r\n                     blur={this._onSaveHeader}/>\r\n            : <h2 onDoubleClick={() => this._onStartEditListHeader(listName)}\r\n                  title=\"Make double click to change\">{listName}</h2>;\r\n\r\n\r\n        const tasksList = filterArray(this.state.tasks, this.state.taskView);\r\n        const viewTasks = tasksList.map((item, index) => {\r\n            return (\r\n                <div className={style.taskContainer} key={`${item.taskText}-${index}`}>\r\n                    <div className={`${style.taskNumber} ${style.taskItem}`}>{index + 1}.</div>\r\n                    <div className={`${style.taskText} ${style.taskItem}`}\r\n                         onDoubleClick={(e) => this._onEditTask({e, taskId: item._id})}\r\n                         title=\"Make double click to change\">\r\n                        {item.isEdit\r\n                            ? <Input imputValue={this.state.editField}\r\n                                     focus={true}\r\n                                     action={this._onEditText}\r\n                                     keyAction={this._onPressEnter}\r\n                                     blur={this._onBlurEditTask}/>\r\n                            : item.taskText}\r\n                    </div>\r\n                    <div className={`${style.taskStatus} ${style.taskItem}`}>{item.taskStatus}</div>\r\n                    <div className={`${style.taskButtons} ${style.taskItem}`}>\r\n                        {item.taskStatus === status.inProcess\r\n                            ? <Button value={'Complete Task'}\r\n                                      action={this._onChangeTaskStatus}\r\n                                      itemId={item._id}\r\n                                      styleClass='taskButton'\r\n                                      data={item.taskStatus}/>\r\n                            : <Button value={'Undo'}\r\n                                      action={this._onChangeTaskStatus}\r\n                                      itemId={item._id}\r\n                                      styleClass='taskButton'\r\n                                      data={item.taskStatus}/>}\r\n                        <Button value={'Delete'}\r\n                                action={this._onDeleteTask}\r\n                                itemId={item._id}\r\n                                styleClass='taskButton'/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n        const filterButtons = [];\r\n        for (let key in taskView) {\r\n            this.state.taskView === taskView[key]\r\n                ? filterButtons.push(<Button value={taskView[key]}\r\n                                             action={this._onFilterTasks}\r\n                                             itemId={taskView[key]}\r\n                                             styleClass='activeButton'\r\n                                             key={`${key}`}/>)\r\n                : filterButtons.push(<Button value={taskView[key]}\r\n                                             action={this._onFilterTasks}\r\n                                             itemId={taskView[key]}\r\n                                             key={`${key}`}/>)\r\n        }\r\n        const display = [\r\n            <div className={style.tasksContainer} key={`task_with_filterButtons-${listId}`}>\r\n                {viewTasks}\r\n                <div className={`${style.tasksFilter}`}>\r\n                    {filterButtons}\r\n                </div>\r\n            </div>,\r\n            <div className={style.deleteList} key={`delete_list-${listId}`}>\r\n                <Button value={'Delete list'} itemId={listId} action={deleteList}/>\r\n            </div>];\r\n\r\n        const viewComponent = this.state.isError\r\n            ? <Error errorText={this.state.errorText} errorReset={this._onResetError}/>\r\n            : display;\r\n\r\n        return (\r\n            <div className={style.listContainer}>\r\n                {listHeader}\r\n                <div className={style.proposal}>\r\n                    <label htmlFor={`${listName}_${listId}`}>Enter your task, please!</label>\r\n                    <Input imputId={`${listName}_${listId}`}\r\n                           imputValue={this.state.field}\r\n                           action={this._onTypeText}\r\n                           name={'taskInput'}\r\n                           keyAction={this._onPressEnterToAddTask}/>\r\n                    <Button value={'Add'} action={this._onAddTask} styleClass='addTaskButton'/>\r\n                </div>\r\n                {viewComponent}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default List","import {taskView, status} from './../components/list/List';\r\n\r\nexport function filterArray(array, condition) {\r\n    const copy = [...array];\r\n    if (condition === taskView.all) {\r\n        return copy;\r\n    } else if (condition === taskView.complete) {\r\n        return copy.filter(item => item.taskStatus === status.complete);\r\n    } else if (condition === taskView.inProgress) {\r\n        return copy.filter(item => item.taskStatus === status.inProcess);\r\n    } else {\r\n        return array;\r\n    }\r\n}\r\n\r\nexport function checkComponentFields(state) {\r\n    let error = {isError: false};\r\n    for (let key in state) {\r\n        let errorKey = `error${key.charAt(0).toUpperCase() + key.slice(1)}`;\r\n        if (state[key].trim() === '') {\r\n            error.isError = true;\r\n            error[errorKey] = `${key} field cannot be empty`;\r\n        } else {\r\n            error[errorKey] = '';\r\n        }\r\n    }\r\n    if (!error['errorEmail']) {\r\n        if (state.email.search(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/) !== 0) {\r\n            error.isError = true;\r\n            error['errorEmail'] = 'error in email field';\r\n        }\r\n    }\r\n    return error;\r\n}","import React from \"react\";\r\nimport style from './Auth.module.css';\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport Button from \"../Button/Button\";\r\nimport Input from \"../Input/Input\";\r\nimport {API} from \"../../API/serverAPI\";\r\nimport {checkComponentFields} from \"../../assets/functions\";\r\n\r\nclass Auth extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            pass: '',\r\n            errorEmail: '',\r\n            errorPass: '',\r\n        }\r\n    };\r\n\r\n    _onSignUp = () => {\r\n        this.props.history.push('/registration');\r\n    };\r\n\r\n    _onChangeField = (e, type) => {\r\n        if (type === 'email') {\r\n            this.setState({email: e.target.value});\r\n        } else if (type === 'pass') {\r\n            this.setState({pass: e.target.value});\r\n        }\r\n    };\r\n    _sigIn = () => {\r\n        const checkState = {\r\n            email: this.state.email,\r\n            pass: this.state.pass\r\n        };\r\n        const error = checkComponentFields(checkState);\r\n        if (error.isError) {\r\n            delete error.isError;\r\n            this.setState({...error});\r\n            return;\r\n        }\r\n        this.props.switchLoading();\r\n        API.auth(checkState)\r\n            .then(res => {\r\n                this.props.switchLoading();\r\n                this.props.changeAuth(res.data)\r\n            })\r\n            .catch(err => {\r\n                this.props.switchLoading();\r\n                this.setState({errorEmail: '', errorPass: '', ...err.response.data});\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const isAuth = this.props.isAuth;\r\n        if (isAuth) return <Redirect to={'/app'}/>;\r\n        return (\r\n            <div className={style.auth_container}>\r\n                <div className={style.email}>\r\n                    <label htmlFor=\"authEmail\">Enter your email address:</label>\r\n                    <Input imputType={'email'}\r\n                           imputId={'authEmail'}\r\n                           value={this.state.email}\r\n                           action={this._onChangeField}\r\n                           fieldType={'email'}\r\n                           placeholder={'example@example.com'}/>\r\n                    <p className=\"error\">{this.state.errorEmail}</p>\r\n                </div>\r\n                <div className={style.pass}>\r\n                    <label htmlFor=\"authPass\">Enter your pass:</label>\r\n                    <Input imputType={'password'}\r\n                           imputId={'authPass'}\r\n                           value={this.state.pass}\r\n                           action={this._onChangeField}\r\n                           fieldType={'pass'}/>\r\n                    <p className=\"error\">{this.state.errorPass}</p>\r\n                </div>\r\n                <div className={style.links}>\r\n                    <Button value={'Sign up'}\r\n                            action={this._onSignUp}\r\n                            styleClass='link_button'/>\r\n                    <Button value={'Sign in'}\r\n                            action={this._sigIn}\r\n                            styleClass='link_button'/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Auth);","import React from \"react\";\r\nimport style from './Registration.module.css';\r\nimport Input from \"../Input/Input\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Button from \"../Button/Button\";\r\nimport {API} from \"../../API/serverAPI\";\r\nimport {checkComponentFields} from \"../../assets/functions\";\r\n\r\nclass Registration extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            surname: '',\r\n            email: '',\r\n            pass: '',\r\n            errorName: '',\r\n            errorSurname: '',\r\n            errorEmail: '',\r\n            errorPass: '',\r\n        };\r\n    }\r\n\r\n    _onChangeField = (e, type) => {\r\n        switch (type) {\r\n            case 'name':\r\n                this.setState({name: e.target.value});\r\n                break;\r\n            case 'surname':\r\n                this.setState({surname: e.target.value});\r\n                break;\r\n            case 'email':\r\n                this.setState({email: e.target.value});\r\n                break;\r\n            case 'pass':\r\n                this.setState({pass: e.target.value});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    _sigUp = () => {\r\n        const checkState = {\r\n            name: this.state.name,\r\n            surname: this.state.surname,\r\n            email: this.state.email,\r\n            pass: this.state.pass\r\n        };\r\n        const error = checkComponentFields(checkState);\r\n        if (error.isError) {\r\n            delete error.isError;\r\n            this.setState({...error});\r\n            return;\r\n        }\r\n        this.props.switchLoading();\r\n        API.registartionUser(checkState)\r\n            .then(res => {\r\n                this.props.switchLoading();\r\n                this.props.changeAuth(res.data);\r\n            })\r\n            .catch(err => {\r\n                this.props.switchLoading();\r\n                this.setState({\r\n                    errorName: '', errorSurname: '', errorEmail: '', errorPass: '',\r\n                    ...err.response.data\r\n                })\r\n            });\r\n\r\n    };\r\n\r\n    render() {\r\n        const isAuth = this.props.isAuth;\r\n        if (isAuth) return <Redirect to={'/app'}/>;\r\n        return (\r\n            <div className={style.reg_container}>\r\n                <div className={style.name}>\r\n                    <label htmlFor=\"regName\">Enter your name</label>\r\n                    <Input imputId={'regName'} value={this.state.name}\r\n                           action={this._onChangeField}\r\n                           fieldType='name'\r\n                           placeholder='Bob'/>\r\n                    <p>{this.state.errorName}</p>\r\n                </div>\r\n                <div className={style.surname}>\r\n                    <label htmlFor=\"regSurname\">Enter your surname</label>\r\n                    <Input imputId={'regSurname'} value={this.state.surname}\r\n                           action={this._onChangeField}\r\n                           fieldType='surname'\r\n                           placeholder='Stone'/>\r\n                    <p>{this.state.errorSurname}</p>\r\n                </div>\r\n                <div className={style.email}>\r\n                    <label htmlFor=\"regEmail\">Enter your email address</label>\r\n                    <Input imputType={'email'}\r\n                           imputId={'regEmail'}\r\n                           value={this.state.email}\r\n                           action={this._onChangeField}\r\n                           fieldType='email'\r\n                           placeholder='example@example.com'/>\r\n                    <p>{this.state.errorEmail}</p>\r\n                </div>\r\n                <div className={style.pass}>\r\n                    <label htmlFor=\"regPass\">Enter your pass</label>\r\n                    <Input imputType={'password'}\r\n                           imputId={'regPass'}\r\n                           value={this.state.pass}\r\n                           action={this._onChangeField}\r\n                           fieldType='pass'/>\r\n                    <p>{this.state.errorPass}</p>\r\n                </div>\r\n                <Button value={'Sign up'}\r\n                        action={this._sigUp}\r\n                        styleClass='reg_button'/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Registration;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport './App.css';\r\nimport List from './../list/List'\r\nimport Input from \"../Input/Input\";\r\nimport Button from \"./../Button/Button\";\r\nimport {API} from \"./../../API/serverAPI\";\r\nimport Error from \"./../Error/Error\";\r\n\r\nconst APPID = 'toDoLists';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listName: '',\r\n            lists: [],\r\n            isError: false,\r\n            errorText: '',\r\n        };\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        const isAuth = this.props.isAuth;\r\n        if (!isAuth) return;\r\n        this.props.switchLoading();\r\n        API.getUserLists()\r\n            .then(res => {\r\n                this.props.switchLoading();\r\n                if (!res.data.isAuth) return this.props.changeAuth({isAuth: res.data.isAuth});\r\n                this.setState({lists: [...res.data.data]});\r\n            })\r\n            .catch(err => {\r\n                this.props.switchLoading();\r\n                this.setState({isError: true, errorText: err.response.data});\r\n            });\r\n    };\r\n\r\n    _onType = e => {\r\n        const listName = e.target.value;\r\n        this.setState({listName});\r\n    };\r\n\r\n    _onAddList = () => {\r\n        if (this.state.listName.trim() === '') {\r\n            this.setState({isError: true, errorText: 'The field cannot be empty'});\r\n            return;\r\n        }\r\n        this.props.switchLoading();\r\n        API.addList(this.state.listName)\r\n            .then(res => {\r\n                this.props.switchLoading();\r\n                if (!res.data.isAuth) return this.props.changeAuth({isAuth: res.data.isAuth});\r\n                this.setState({lists: [...res.data.data], listName: ''})\r\n            })\r\n            .catch(err => {\r\n                this.props.switchLoading();\r\n                this.setState({isError: true, errorText: err.response.data})\r\n            });\r\n    };\r\n\r\n    _onPressEnter = e => {\r\n        if (e.key === 'Enter') {\r\n            this._onAddList();\r\n        }\r\n    };\r\n\r\n    _onDeleteList = ({itemId: listId}) => {\r\n        this.props.switchLoading();\r\n        API.deleteList(listId)\r\n            .then(res => {\r\n                this.props.switchLoading();\r\n                if (!res.data.isAuth) return this.props.changeAuth({isAuth: res.data.isAuth});\r\n                this.setState({lists: [...res.data.data]});\r\n            })\r\n            .catch(err => {\r\n                this.props.switchLoading();\r\n                this.setState({isError: true, errorText: err.response.data})\r\n            });\r\n    };\r\n\r\n    _onSaveNewListName = (listId, listName, prevListName) => {\r\n        if (listName.trim() === prevListName) return;\r\n        if (listName.trim() === '') {\r\n            this.setState({isError: true, errorText: 'The field cannot be empty'});\r\n            return;\r\n        }\r\n        this.props.switchLoading();\r\n        API.updateListName(listId, listName)\r\n            .then(res => {\r\n                this.props.switchLoading();\r\n                if (!res.data.isAuth) return this.props.changeAuth({isAuth: res.data.isAuth});\r\n                this.setState({lists: [...res.data.data]})\r\n            })\r\n            .catch(err => {\r\n                this.props.switchLoading();\r\n                this.setState({isError: true, errorText: err.response.data})\r\n            });\r\n    };\r\n\r\n    _onResetError = () => {\r\n        this.setState({isError: false, errorText: ''});\r\n    };\r\n    _onLogOut = () => {\r\n        this.props.switchLoading();\r\n        API.logOut()\r\n            .then(res => {\r\n                this.props.switchLoading();\r\n                if (!res.data.isAuth) return this.props.changeAuth({isAuth: res.data.isAuth});\r\n                alert('Something went wrong, try again later');\r\n            })\r\n            .catch(err => {\r\n                this.props.switchLoading();\r\n                this.setState({isError: true, errorText: err.response.data})\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const isAuth = this.props.isAuth;\r\n        if (!isAuth) return <Redirect to={'/auth'}/>;\r\n\r\n        const displayLists = this.state.lists.map((item, index) =>\r\n            <List listName={item.listName}\r\n                  index={index}\r\n                  listId={item._id}\r\n                  key={`key-${item._id}`}\r\n                  deleteList={this._onDeleteList}\r\n                  editListName={this._onSaveNewListName}\r\n                  taskView={item.taskView}\r\n                  appId={APPID}\r\n                  changeAuth={this.props.changeAuth}\r\n                  switchLoading={this.props.switchLoading}\r\n                  increaseLoadingTasksCount={this.props.increaseLoadingTasksCount}/>\r\n        );\r\n        const viewComponent = this.state.isError\r\n            ? <Error errorText={this.state.errorText} errorReset={this._onResetError}/>\r\n            : displayLists;\r\n\r\n        return (\r\n            <div className={'app_container'}>\r\n                <div>\r\n                    <div className=\"header\">\r\n                        <h1 className={'app_h1'}>Enter the name of new list, please!</h1>\r\n                        <Button value={'Log out'} action={this._onLogOut} styleClass={'logOutButton'}/>\r\n                    </div>\r\n                    <Input imputValue={this.state.listName}\r\n                           action={this._onType}\r\n                           keyAction={this._onPressEnter}\r\n                           name={'add_list'}/>\r\n                    <Button value={'Add list'}\r\n                            action={this._onAddList}\r\n                            styleClass={'add_list_button'}/>\r\n                </div>\r\n                <div className={'app_lists_container'}>\r\n                    {viewComponent}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport style from './Loading.module.css';\r\n\r\nclass Loading extends React.Component {\r\n\r\n    _prevent = (e) => {\r\n        e.stopPropagation();\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div className={style.loadingdiv} onClick={(e) => this._prevent(e)}\r\n                 onDoubleClick={(e) => this._prevent(e)}>\r\n                <p>Loading data...</p>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading","import React from \"react\";\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport style from './Main.module.css';\r\nimport Auth from \"../Auth/Auth\";\r\nimport Registration from \"../Registration/Registration\";\r\nimport App from \"../App/App\";\r\nimport {API} from \"../../API/serverAPI\";\r\nimport Loading from \"../Loading/Loading\";\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isAuth: false,\r\n            isLoading: false,\r\n            loadingTasksCount: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._onSwitchLoadingData();\r\n        API.isAuth()\r\n            .then(res => {\r\n                if (this.state.isAuth === res.data.isAuth) {\r\n                    this._onSwitchLoadingData();\r\n                    return;\r\n                }\r\n                this._onSwitchLoadingData();\r\n                this.setState({isAuth: res.data.isAuth});\r\n            })\r\n            .catch(err => {\r\n                console.log('Auth DidMount err', err);\r\n                this.setState({isLoading: false});\r\n            })\r\n    }\r\n\r\n    _changeAuth = (isAuth) => {\r\n        if (this.state.isAuth === isAuth.isAuth) return;\r\n        this.setState({isAuth: isAuth.isAuth})\r\n    };\r\n\r\n    _onSwitchLoadingData = () => {\r\n        this.setState({isLoading: !this.state.isLoading})\r\n    };\r\n\r\n    _onIncreaseLoadingTasksCount = (count) => {\r\n        const newCount = this.state.loadingTasksCount + count;\r\n        console.log('main newCount', newCount);\r\n        this.setState({loadingTasksCount: newCount});\r\n    };\r\n\r\n    render() {\r\n        const isAuth = this.state.isAuth;\r\n        console.log('main ', this.state);\r\n        const loadingView = this.state.isLoading || this.state.loadingTasksCount !== 0\r\n            ? <Loading/> : null;\r\n\r\n        return (\r\n            <div className={style.main_container}>\r\n                <h1>The todo list - application which help to save your time</h1>\r\n                <Switch>\r\n                    <Route exact path={'/'}>\r\n                        <Auth isAuth={isAuth} changeAuth={this._changeAuth}\r\n                              switchLoading={this._onSwitchLoadingData}/>\r\n                    </Route>\r\n                    <Route path={'/auth'}>\r\n                        <Auth isAuth={isAuth} changeAuth={this._changeAuth}\r\n                              switchLoading={this._onSwitchLoadingData}/>\r\n                    </Route>\r\n                    <Route path={'/registration'}>\r\n                        <Registration isAuth={isAuth} changeAuth={this._changeAuth}\r\n                                      switchLoading={this._onSwitchLoadingData}/>\r\n                    </Route>\r\n                    <Route path={'/app'}>\r\n                        <App isAuth={isAuth} changeAuth={this._changeAuth}\r\n                             switchLoading={this._onSwitchLoadingData}\r\n                             increaseLoadingTasksCount={this._onIncreaseLoadingTasksCount}/>\r\n                    </Route>\r\n                </Switch>\r\n                {loadingView}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Main from \"./components/Main/Main\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(<BrowserRouter>\r\n    <Main />\r\n</BrowserRouter>, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContainer\":\"List_listContainer__3T59U\",\"proposal\":\"List_proposal__14Idr\",\"taskContainer\":\"List_taskContainer__391cq\",\"taskItem\":\"List_taskItem__3QaNr\",\"taskText\":\"List_taskText__1DRnb\",\"tasksFilter\":\"List_tasksFilter__3HJQi\",\"deleteList\":\"List_deleteList__28Sd6\"};"],"sourceRoot":""}