{"version":3,"sources":["components/Registration/Registration.module.css","components/Auth/Auth.module.css","components/Error/Error.module.css","components/Main/Main.module.css","components/Button/Button.module.css","components/Input/Input.module.css","components/Loading/Loading.module.css","components/Button/Button.jsx","components/Input/Input.jsx","API/serverAPI.js","components/Error/Error.jsx","components/list/List.jsx","assets/functions.js","components/Auth/Auth.jsx","components/Registration/Registration.jsx","components/App/App.jsx","components/Loading/Loading.jsx","components/Main/Main.jsx","index.js","components/list/List.module.css"],"names":["module","exports","Button","this","props","value","action","itemId","styleClass","data","button","type","onClick","e","className","style","Fragment","React","Component","Input","imputType","imputId","imputValue","focus","keyAction","blur","name","fieldType","placeholder","id","onChange","autoFocus","onKeyPress","onBlur","instance","axios","baseURL","withCredentials","API","get","listName","post","listId","delete","newListName","put","task","taskId","currentStatus","newTaskText","fields","Error","state","timerId","timer","errorText","setState","prevProps","prevState","snapshot","errorReset","setTimeout","status","taskView","all","complete","inProgress","List","_onTypeText","newText","target","field","_onAddTask","preventDefault","trim","taskText","taskStatus","isEdit","switchLoading","then","res","isAuth","changeAuth","tasks","catch","err","isError","response","_onChangeTaskStatus","_onFilterTasks","_onEditTask","tasksList","editField","forEach","item","_id","prevTextTask","editItemId","_onEditText","_onSaveEditTask","_onPressEnter","key","_onPressEnterToAddTask","_onBlurEditTask","_onDeleteTask","_onStartEditListHeader","currentName","isEditHeader","editListName","prevListName","_onEditHeader","_onSaveHeader","undefined","_onResetError","deleteList","listHeader","onDoubleClick","title","viewTasks","array","condition","copy","filter","filterArray","map","index","taskContainer","taskNumber","taskItem","taskButtons","filterButtons","push","display","tasksContainer","tasksFilter","viewComponent","listContainer","proposal","htmlFor","checkComponentFields","error","errorKey","charAt","toUpperCase","slice","email","search","Auth","_onSignUp","history","_onChangeField","pass","_sigIn","checkState","errorEmail","errorPass","to","auth_container","links","withRouter","Registration","surname","_sigUp","errorName","errorSurname","reg_container","App","componentDidMount","lists","_onType","_onAddList","console","log","_onDeleteList","_onSaveNewListName","_onLogOut","alert","displayLists","Loading","_prevent","stopPropagation","loadingdiv","Main","_changeAuth","_onSwitchLoadingData","isLoading","loadingView","main_container","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b084b5a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"reg_container\":\"Registration_reg_container__wzEIp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth_container\":\"Auth_auth_container__35U4W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorText\":\"Error_errorText__3LEpv\",\"timer\":\"Error_timer__2oSXs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_container\":\"Main_main_container__1wyhU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeButton\":\"Button_activeButton__1h8u7\",\"addTaskButton\":\"Button_addTaskButton__1IrNC\",\"taskButton\":\"Button_taskButton__mXhrz\",\"link_button\":\"Button_link_button__1XK19\",\"reg_button\":\"Button_reg_button__3x6Do\",\"add_list_button\":\"Button_add_list_button__3QiTc\",\"logOutButton\":\"Button_logOutButton__380wU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskInput\":\"Input_taskInput__2gLIe\",\"add_list\":\"Input_add_list__i_MKP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingdiv\":\"Loading_loadingdiv__1fS1r\",\"loading\":\"Loading_loading__22KBI\"};","import React from 'react';\r\nimport style from './Button.module.css';\r\n\r\nclass Button extends React.Component {\r\n\r\n    render() {\r\n        const {value, action, itemId, styleClass, data} = this.props;\r\n        const button = styleClass\r\n            ?\r\n            <input type=\"button\" value={value} onClick={(e) => action({e, itemId, data})} className={`${style[styleClass]}`}/>\r\n            : <input type=\"button\" value={value} onClick={(e) => action({e, itemId, data})}/>;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {button}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;","import React from \"react\";\r\nimport style from './Input.module.css';\r\n\r\nclass Input extends React.Component {\r\n\r\n    render() {\r\n        const {\r\n            imputType = 'text', imputId, imputValue, action,\r\n            focus = false, keyAction = null, blur = null, name, fieldType = null, placeholder = null\r\n        } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <input type={imputType}\r\n                       id={imputId}\r\n                       value={imputValue}\r\n                       onChange={(e) => action(e, fieldType)}\r\n                       autoFocus={focus}\r\n                       onKeyPress={(e) => {\r\n                           if (keyAction) {\r\n                               keyAction(e);\r\n                           }\r\n                       }}\r\n                       onBlur={() => {\r\n                           if (blur) {\r\n                               blur();\r\n                           }\r\n                       }}\r\n                       className={`${style[name]}`}\r\n                       placeholder={placeholder}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Input;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://arcane-stream-95803.herokuapp.com/',\r\n    withCredentials: true,\r\n});\r\n\r\nexport const API = {\r\n    getUserData() {\r\n        return instance.get('main');\r\n    },\r\n    addList(listName) {\r\n        return instance.post('main', {listName});\r\n    },\r\n    deleteList(listId) {\r\n        return instance.delete('main', {data: {listId}});\r\n    },\r\n    updateListName(listId, newListName) {\r\n        return instance.put('main', {listId, newListName})\r\n    },\r\n    getListTasks(listId) {\r\n        return instance.get('tasks', {params: {listId}});\r\n    },\r\n    addNewTask(task) {\r\n        return instance.post('tasks', {task});\r\n    },\r\n    changeTaskStatus(listId, taskId, currentStatus) {\r\n        return instance.put('tasks', {listId, taskId, currentStatus});\r\n    },\r\n    changeTask(listId, taskId, newTaskText) {\r\n        return instance.put('tasks/editTask', {listId, taskId, newTaskText});\r\n    },\r\n    deleteTask(listId, taskId) {\r\n        return instance.delete('tasks', {data: {listId, taskId}});\r\n    },\r\n    isAuth() {\r\n        return instance.get('auth/isAuth');\r\n    },\r\n    auth(fields) {\r\n        return instance.post('auth/auth', {...fields});\r\n    },\r\n    registartionUser(fields) {\r\n        return instance.post('auth/registartion', {...fields});\r\n    },\r\n    logOut() {\r\n        return instance.put('auth/logout');\r\n    },\r\n};","import React from 'react';\r\nimport style from './Error.module.css';\r\n\r\nclass Error extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timerId: null,\r\n            timer: 0,\r\n            errorText: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {errorText} = this.props;\r\n        this.setState({timer: 5, errorText});\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const {timer} = this.state;\r\n        if (timer === 0) {\r\n            this.props.errorReset();\r\n        } else {\r\n            setTimeout(() => this.setState({timer: timer - 1}), 1000)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const errorText = this.state.errorText;\r\n        const timer = this.state.timer;\r\n        return (\r\n            <div>\r\n                <div className={style.errorText}>{errorText}</div>\r\n                <div>The error text will be clean after <span className={style.timer}>{timer}</span> seconds</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Error;","import React from 'react';\r\nimport style from './List.module.css';\r\nimport Button from \"../Button/Button\";\r\nimport {filterArray} from \"../../assets/functions\";\r\nimport Input from \"../Input/Input\";\r\nimport {API} from \"../../API/serverAPI\";\r\nimport Error from \"../Error/Error\";\r\n\r\nexport const status = {\r\n    complete: 'Complete',\r\n    inProcess: 'In progress',\r\n};\r\nexport const taskView = {\r\n    all: 'All',\r\n    complete: 'Complete',\r\n    inProgress: 'In progress',\r\n};\r\n\r\nclass List extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            field: '',\r\n            tasks: [...props.tasks],\r\n            taskView: taskView.all,\r\n            prevTextTask: '',\r\n            editField: '',\r\n            editItemId: null,\r\n            prevListName: '',\r\n            editListName: '',\r\n            isEditHeader: false,\r\n            isError: false,\r\n            errorText: ''\r\n        };\r\n    };\r\n\r\n    _onTypeText = (e) => {\r\n        const newText = e.target.value;\r\n        this.setState({field: newText});\r\n    };\r\n\r\n    _onAddTask = ({e}) => {\r\n        e.preventDefault();\r\n        const {listId} = this.props;\r\n        if (this.state.field.trim() === '') {\r\n            this.setState({isError: true, errorText: 'The field cannot be empty'});\r\n            return;\r\n        }\r\n        const task = {\r\n            taskText: this.state.field,\r\n            taskStatus: status.inProcess,\r\n            isEdit: false,\r\n            listId,\r\n        };\r\n        this.props.switchLoading();\r\n        API.addNewTask(task)\r\n            .then(res => {\r\n                this.props.switchLoading();\r\n                if (!res.data.isAuth) return this.props.changeAuth({isAuth: res.data.isAuth});\r\n                this.setState({field: '', tasks: [...res.data.data]})\r\n            })\r\n            .catch(err => {\r\n                this.props.switchLoading();\r\n                this.setState({isError: true, errorText: err.response.data});\r\n            });\r\n    };\r\n\r\n    _onChangeTaskStatus = ({e, itemId: taskId, data: currentStatus}) => {\r\n        e.preventDefault();\r\n        const {listId} = this.props;\r\n        this.props.switchLoading();\r\n        API.changeTaskStatus(listId, taskId, currentStatus)\r\n            .then(res => {\r\n                this.props.switchLoading();\r\n                if (!res.data.isAuth) return this.props.changeAuth({isAuth: res.data.isAuth});\r\n                this.setState({tasks: [...res.data.data]})\r\n            })\r\n            .catch(err => {\r\n                this.props.switchLoading();\r\n                this.setState({isError: true, errorText: err.response.data});\r\n            });\r\n    };\r\n\r\n    _onFilterTasks = ({e, itemId}) => {\r\n        e.preventDefault();\r\n        this.setState({taskView: itemId});\r\n    };\r\n\r\n    _onEditTask = ({e, taskId}) => {\r\n        e.preventDefault();\r\n        const tasksList = [...this.state.tasks];\r\n        let editField = '';\r\n        tasksList.forEach(item => {\r\n            if (item._id === taskId) {\r\n                item.isEdit = !item.isEdit;\r\n                editField = item.taskText;\r\n            }\r\n        });\r\n        this.setState({tasks: tasksList, editField, prevTextTask: editField, editItemId: taskId});\r\n    };\r\n\r\n    _onEditText = (e) => {\r\n        const newText = e.target.value;\r\n        this.setState({editField: newText});\r\n    };\r\n\r\n    _onSaveEditTask = () => {\r\n        const {listId} = this.props;\r\n        if (this.state.editField.trim() === '') {\r\n            this.setState({isError: true, errorText: 'The task text field cannot be empty'});\r\n            return;\r\n        }\r\n        if (this.state.prevTextTask === this.state.editField.trim()) {\r\n            const tasksList = [...this.state.tasks];\r\n            tasksList.forEach(item => {\r\n                if (item._id === this.state.editItemId) {\r\n                    item.isEdit = !item.isEdit;\r\n                }\r\n            });\r\n            this.setState({tasks: tasksList, editField: '', prevTextTask: '', editItemId: ''});\r\n            return;\r\n        }\r\n        this.props.switchLoading();\r\n        API.changeTask(listId, this.state.editItemId, this.state.editField)\r\n            .then(res => {\r\n                this.props.switchLoading();\r\n                if (!res.data.isAuth) return this.props.changeAuth({isAuth: res.data.isAuth});\r\n                this.setState({editField: '', prevTextTask: '', editItemId: null, tasks: [...res.data.data]});\r\n            })\r\n            .catch(err => {\r\n                this.props.switchLoading();\r\n                this.setState({isError: true, errorText: err.response.data});\r\n            });\r\n    };\r\n\r\n    _onPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this._onSaveEditTask();\r\n        }\r\n    };\r\n\r\n    _onPressEnterToAddTask = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this._onAddTask({e});\r\n        }\r\n    };\r\n\r\n    _onBlurEditTask = () => {\r\n        this._onSaveEditTask();\r\n    };\r\n\r\n    _onDeleteTask = ({e, itemId: taskId}) => {\r\n        e.preventDefault();\r\n        const {listId} = this.props;\r\n        this.props.switchLoading();\r\n        API.deleteTask(listId, taskId)\r\n            .then(res => {\r\n                this.props.switchLoading();\r\n                if (!res.data.isAuth) return this.props.changeAuth({isAuth: res.data.isAuth});\r\n                this.setState({tasks: [...res.data.data]});\r\n            })\r\n            .catch(err => {\r\n                this.props.switchLoading();\r\n                this.setState({isError: true, errorText: err.response.data});\r\n            });\r\n    };\r\n\r\n    _onStartEditListHeader = (currentName) => {\r\n        this.setState({\r\n            isEditHeader: !this.state.isEditHeader,\r\n            editListName: currentName, prevListName: currentName\r\n        });\r\n    };\r\n\r\n    _onEditHeader = (e) => {\r\n        const newText = e.target.value;\r\n        this.setState({editListName: newText});\r\n    };\r\n\r\n    _onSaveHeader = (e) => {\r\n        if (e === undefined || e.key === 'Enter') {\r\n            this.props.editListName(this.props.listId, this.state.editListName, this.state.prevListName);\r\n            this.setState({editListName: '', isEditHeader: !this.state.isEditHeader, prevListName: ''});\r\n        }\r\n    };\r\n\r\n    _onResetError = () => {\r\n        this.setState({isError: false, errorText: ''});\r\n    };\r\n\r\n    render() {\r\n        const {listName, listId, deleteList} = this.props;\r\n        const listHeader = this.state.isEditHeader\r\n            ? <Input imputValue={this.state.editListName}\r\n                     focus={true}\r\n                     action={this._onEditHeader}\r\n                     keyAction={this._onSaveHeader}\r\n                     blur={this._onSaveHeader}/>\r\n            : <h2 onDoubleClick={() => this._onStartEditListHeader(listName)}\r\n                  title=\"Make double click to change\">{listName}</h2>;\r\n\r\n\r\n        const tasksList = filterArray(this.state.tasks, this.state.taskView);\r\n        const viewTasks = tasksList.map((item, index) => {\r\n            return (\r\n                <div className={style.taskContainer} key={`${item.taskText}-${index}`}>\r\n                    <div className={`${style.taskNumber} ${style.taskItem}`}>{index + 1}.</div>\r\n                    <div className={`${style.taskText} ${style.taskItem}`}\r\n                         onDoubleClick={(e) => this._onEditTask({e, taskId: item._id})}\r\n                         title=\"Make double click to change\">\r\n                        {item.isEdit\r\n                            ? <Input imputValue={this.state.editField}\r\n                                     focus={true}\r\n                                     action={this._onEditText}\r\n                                     keyAction={this._onPressEnter}\r\n                                     blur={this._onBlurEditTask}/>\r\n                            : item.taskText}\r\n                    </div>\r\n                    <div className={`${style.taskStatus} ${style.taskItem}`}>{item.taskStatus}</div>\r\n                    <div className={`${style.taskButtons} ${style.taskItem}`}>\r\n                        {item.taskStatus === status.inProcess\r\n                            ? <Button value={'Complete Task'}\r\n                                      action={this._onChangeTaskStatus}\r\n                                      itemId={item._id}\r\n                                      styleClass='taskButton'\r\n                                      data={item.taskStatus}/>\r\n                            : <Button value={'Undo'}\r\n                                      action={this._onChangeTaskStatus}\r\n                                      itemId={item._id}\r\n                                      styleClass='taskButton'\r\n                                      data={item.taskStatus}/>}\r\n                        <Button value={'Delete'}\r\n                                action={this._onDeleteTask}\r\n                                itemId={item._id}\r\n                                styleClass='taskButton'/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n        const filterButtons = [];\r\n        for (let key in taskView) {\r\n            this.state.taskView === taskView[key]\r\n                ? filterButtons.push(<Button value={taskView[key]}\r\n                                             action={this._onFilterTasks}\r\n                                             itemId={taskView[key]}\r\n                                             styleClass='activeButton'\r\n                                             key={`${key}`}/>)\r\n                : filterButtons.push(<Button value={taskView[key]}\r\n                                             action={this._onFilterTasks}\r\n                                             itemId={taskView[key]}\r\n                                             key={`${key}`}/>)\r\n        }\r\n        const display = [\r\n            <div className={style.tasksContainer} key={`task_with_filterButtons-${listId}`}>\r\n                {viewTasks}\r\n                <div className={`${style.tasksFilter}`}>\r\n                    {filterButtons}\r\n                </div>\r\n            </div>,\r\n            <div className={style.deleteList} key={`delete_list-${listId}`}>\r\n                <Button value={'Delete list'} itemId={listId} action={deleteList}/>\r\n            </div>];\r\n\r\n        const viewComponent = this.state.isError\r\n            ? <Error errorText={this.state.errorText} errorReset={this._onResetError}/>\r\n            : display;\r\n\r\n        return (\r\n            <div className={style.listContainer}>\r\n                {listHeader}\r\n                <div className={style.proposal}>\r\n                    <label htmlFor={`${listName}_${listId}`}>Enter your task, please!</label>\r\n                    <Input imputId={`${listName}_${listId}`}\r\n                           imputValue={this.state.field}\r\n                           action={this._onTypeText}\r\n                           name={'taskInput'}\r\n                           keyAction={this._onPressEnterToAddTask}/>\r\n                    <Button value={'Add'} action={this._onAddTask} styleClass='addTaskButton'/>\r\n                </div>\r\n                {viewComponent}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default List","import {taskView, status} from './../components/list/List';\r\n\r\nexport function filterArray(array, condition) {\r\n    const copy = [...array];\r\n    if (condition === taskView.all) {\r\n        return copy;\r\n    } else if (condition === taskView.complete) {\r\n        return copy.filter(item => item.taskStatus === status.complete);\r\n    } else if (condition === taskView.inProgress) {\r\n        return copy.filter(item => item.taskStatus === status.inProcess);\r\n    } else {\r\n        return array;\r\n    }\r\n}\r\n\r\nexport function checkComponentFields(state) {\r\n    let error = {isError: false};\r\n    for (let key in state) {\r\n        let errorKey = `error${key.charAt(0).toUpperCase() + key.slice(1)}`;\r\n        if (state[key].trim() === '') {\r\n            error.isError = true;\r\n            error[errorKey] = `${key} field cannot be empty`;\r\n        } else {\r\n            error[errorKey] = '';\r\n        }\r\n    }\r\n    if (!error['errorEmail']) {\r\n        if (state.email.search(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/) !== 0) {\r\n            error.isError = true;\r\n            error['errorEmail'] = 'error in email field';\r\n        }\r\n    }\r\n    return error;\r\n}","import React from \"react\";\r\nimport style from './Auth.module.css';\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport Button from \"../Button/Button\";\r\nimport Input from \"../Input/Input\";\r\nimport {API} from \"../../API/serverAPI\";\r\nimport {checkComponentFields} from \"../../assets/functions\";\r\n\r\nclass Auth extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            pass: '',\r\n            errorEmail: '',\r\n            errorPass: '',\r\n        }\r\n    };\r\n\r\n    _onSignUp = () => {\r\n        this.props.history.push('/registration');\r\n    };\r\n\r\n    _onChangeField = (e, type) => {\r\n        if (type === 'email') {\r\n            this.setState({email: e.target.value});\r\n        } else if (type === 'pass') {\r\n            this.setState({pass: e.target.value});\r\n        }\r\n    };\r\n    _sigIn = () => {\r\n        const checkState = {\r\n            email: this.state.email,\r\n            pass: this.state.pass\r\n        };\r\n        const error = checkComponentFields(checkState);\r\n        if (error.isError) {\r\n            delete error.isError;\r\n            this.setState({...error});\r\n            return;\r\n        }\r\n        this.props.switchLoading();\r\n        API.auth(checkState)\r\n            .then(res => {\r\n                this.props.switchLoading();\r\n                this.props.changeAuth(res.data)\r\n            })\r\n            .catch(err => {\r\n                this.props.switchLoading();\r\n                this.setState({errorEmail: '', errorPass: '', ...err.response.data});\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const isAuth = this.props.isAuth;\r\n        if (isAuth) return <Redirect to={'/app'}/>;\r\n        return (\r\n            <div className={style.auth_container}>\r\n                <div className={style.email}>\r\n                    <label htmlFor=\"authEmail\">Enter your email address:</label>\r\n                    <Input imputType={'email'}\r\n                           imputId={'authEmail'}\r\n                           value={this.state.email}\r\n                           action={this._onChangeField}\r\n                           fieldType={'email'}\r\n                           placeholder={'example@example.com'}/>\r\n                    <p className=\"error\">{this.state.errorEmail}</p>\r\n                </div>\r\n                <div className={style.pass}>\r\n                    <label htmlFor=\"authPass\">Enter your pass:</label>\r\n                    <Input imputType={'password'}\r\n                           imputId={'authPass'}\r\n                           value={this.state.pass}\r\n                           action={this._onChangeField}\r\n                           fieldType={'pass'}/>\r\n                    <p className=\"error\">{this.state.errorPass}</p>\r\n                </div>\r\n                <div className={style.links}>\r\n                    <Button value={'Sign up'}\r\n                            action={this._onSignUp}\r\n                            styleClass='link_button'/>\r\n                    <Button value={'Sign in'}\r\n                            action={this._sigIn}\r\n                            styleClass='link_button'/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Auth);","import React from \"react\";\r\nimport style from './Registration.module.css';\r\nimport Input from \"../Input/Input\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Button from \"../Button/Button\";\r\nimport {API} from \"../../API/serverAPI\";\r\nimport {checkComponentFields} from \"../../assets/functions\";\r\n\r\nclass Registration extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            surname: '',\r\n            email: '',\r\n            pass: '',\r\n            errorName: '',\r\n            errorSurname: '',\r\n            errorEmail: '',\r\n            errorPass: '',\r\n        };\r\n    }\r\n\r\n    _onChangeField = (e, type) => {\r\n        switch (type) {\r\n            case 'name':\r\n                this.setState({name: e.target.value});\r\n                break;\r\n            case 'surname':\r\n                this.setState({surname: e.target.value});\r\n                break;\r\n            case 'email':\r\n                this.setState({email: e.target.value});\r\n                break;\r\n            case 'pass':\r\n                this.setState({pass: e.target.value});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    _sigUp = () => {\r\n        const checkState = {\r\n            name: this.state.name,\r\n            surname: this.state.surname,\r\n            email: this.state.email,\r\n            pass: this.state.pass\r\n        };\r\n        const error = checkComponentFields(checkState);\r\n        if (error.isError) {\r\n            delete error.isError;\r\n            this.setState({...error});\r\n            return;\r\n        }\r\n        this.props.switchLoading();\r\n        API.registartionUser(checkState)\r\n            .then(res => {\r\n                this.props.switchLoading();\r\n                this.props.changeAuth(res.data);\r\n            })\r\n            .catch(err => {\r\n                this.props.switchLoading();\r\n                this.setState({\r\n                    errorName: '', errorSurname: '', errorEmail: '', errorPass: '',\r\n                    ...err.response.data\r\n                })\r\n            });\r\n\r\n    };\r\n\r\n    render() {\r\n        const isAuth = this.props.isAuth;\r\n        if (isAuth) return <Redirect to={'/app'}/>;\r\n        return (\r\n            <div className={style.reg_container}>\r\n                <div className={style.name}>\r\n                    <label htmlFor=\"regName\">Enter your name</label>\r\n                    <Input imputId={'regName'} value={this.state.name}\r\n                           action={this._onChangeField}\r\n                           fieldType='name'\r\n                           placeholder='Bob'/>\r\n                    <p>{this.state.errorName}</p>\r\n                </div>\r\n                <div className={style.surname}>\r\n                    <label htmlFor=\"regSurname\">Enter your surname</label>\r\n                    <Input imputId={'regSurname'} value={this.state.surname}\r\n                           action={this._onChangeField}\r\n                           fieldType='surname'\r\n                           placeholder='Stone'/>\r\n                    <p>{this.state.errorSurname}</p>\r\n                </div>\r\n                <div className={style.email}>\r\n                    <label htmlFor=\"regEmail\">Enter your email address</label>\r\n                    <Input imputType={'email'}\r\n                           imputId={'regEmail'}\r\n                           value={this.state.email}\r\n                           action={this._onChangeField}\r\n                           fieldType='email'\r\n                           placeholder='example@example.com'/>\r\n                    <p>{this.state.errorEmail}</p>\r\n                </div>\r\n                <div className={style.pass}>\r\n                    <label htmlFor=\"regPass\">Enter your pass</label>\r\n                    <Input imputType={'password'}\r\n                           imputId={'regPass'}\r\n                           value={this.state.pass}\r\n                           action={this._onChangeField}\r\n                           fieldType='pass'/>\r\n                    <p>{this.state.errorPass}</p>\r\n                </div>\r\n                <Button value={'Sign up'}\r\n                        action={this._sigUp}\r\n                        styleClass='reg_button'/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Registration;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport './App.css';\r\nimport List from './../list/List'\r\nimport Input from \"../Input/Input\";\r\nimport Button from \"./../Button/Button\";\r\nimport {API} from \"./../../API/serverAPI\";\r\nimport Error from \"./../Error/Error\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listName: '',\r\n            lists: [],\r\n            isError: false,\r\n            errorText: '',\r\n        };\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        const isAuth = this.props.isAuth;\r\n        if (!isAuth) return;\r\n        this.props.switchLoading();\r\n        API.getUserData()\r\n            .then(res => {\r\n                this.props.switchLoading();\r\n                if (!res.data.isAuth) return this.props.changeAuth({isAuth: res.data.isAuth});\r\n                this.setState({lists: [...res.data.data]});\r\n            })\r\n            .catch(err => {\r\n                this.props.switchLoading();\r\n                this.setState({isError: true, errorText: err.response.data});\r\n            });\r\n    };\r\n\r\n    _onType = e => {\r\n        const listName = e.target.value;\r\n        this.setState({listName});\r\n    };\r\n\r\n    _onAddList = () => {\r\n        if (this.state.listName.trim() === '') {\r\n            this.setState({isError: true, errorText: 'The field cannot be empty'});\r\n            return;\r\n        }\r\n        this.props.switchLoading();\r\n        API.addList(this.state.listName)\r\n            .then(res => {\r\n                this.props.switchLoading();\r\n                if (!res.data.isAuth) return this.props.changeAuth({isAuth: res.data.isAuth});\r\n                console.log('app addList res.data ', res.data);\r\n                this.setState({lists: [...res.data.data], listName: ''})\r\n            })\r\n            .catch(err => {\r\n                this.props.switchLoading();\r\n                this.setState({isError: true, errorText: err.response.data})\r\n            });\r\n    };\r\n\r\n    _onPressEnter = e => {\r\n        if (e.key === 'Enter') {\r\n            this._onAddList();\r\n        }\r\n    };\r\n\r\n    _onDeleteList = ({itemId: listId}) => {\r\n        this.props.switchLoading();\r\n        API.deleteList(listId)\r\n            .then(res => {\r\n                this.props.switchLoading();\r\n                if (!res.data.isAuth) return this.props.changeAuth({isAuth: res.data.isAuth});\r\n                this.setState({lists: [...res.data.data]});\r\n            })\r\n            .catch(err => {\r\n                this.props.switchLoading();\r\n                this.setState({isError: true, errorText: err.response.data})\r\n            });\r\n    };\r\n\r\n    _onSaveNewListName = (listId, listName, prevListName) => {\r\n        if (listName.trim() === prevListName) return;\r\n        if (listName.trim() === '') {\r\n            this.setState({isError: true, errorText: 'The field cannot be empty'});\r\n            return;\r\n        }\r\n        this.props.switchLoading();\r\n        API.updateListName(listId, listName)\r\n            .then(res => {\r\n                this.props.switchLoading();\r\n                if (!res.data.isAuth) return this.props.changeAuth({isAuth: res.data.isAuth});\r\n                this.setState({lists: [...res.data.data]})\r\n            })\r\n            .catch(err => {\r\n                this.props.switchLoading();\r\n                this.setState({isError: true, errorText: err.response.data})\r\n            });\r\n    };\r\n\r\n    _onResetError = () => {\r\n        this.setState({isError: false, errorText: ''});\r\n    };\r\n    _onLogOut = () => {\r\n        this.props.switchLoading();\r\n        API.logOut()\r\n            .then(res => {\r\n                this.props.switchLoading();\r\n                if (!res.data.isAuth) return this.props.changeAuth({isAuth: res.data.isAuth});\r\n                alert('Something went wrong, try again later');\r\n            })\r\n            .catch(err => {\r\n                this.props.switchLoading();\r\n                this.setState({isError: true, errorText: err.response.data})\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const isAuth = this.props.isAuth;\r\n        if (!isAuth) return <Redirect to={'/auth'}/>;\r\n\r\n        const displayLists = this.state.lists.map((item, index) =>\r\n            <List listName={item.listName}\r\n                  listId={item.listId}\r\n                  tasks={item.tasks}\r\n                  key={`key-${item.listId}`}\r\n                  deleteList={this._onDeleteList}\r\n                  editListName={this._onSaveNewListName}\r\n                  taskView={item.taskView}\r\n                  changeAuth={this.props.changeAuth}\r\n                  switchLoading={this.props.switchLoading}/>\r\n        );\r\n        const viewComponent = this.state.isError\r\n            ? <Error errorText={this.state.errorText} errorReset={this._onResetError}/>\r\n            : displayLists;\r\n\r\n        return (\r\n            <div className={'app_container'}>\r\n                <div>\r\n                    <div className=\"header\">\r\n                        <h1 className={'app_h1'}>Enter the name of new list, please!</h1>\r\n                        <Button value={'Log out'} action={this._onLogOut} styleClass={'logOutButton'}/>\r\n                    </div>\r\n                    <Input imputValue={this.state.listName}\r\n                           action={this._onType}\r\n                           keyAction={this._onPressEnter}\r\n                           name={'add_list'}/>\r\n                    <Button value={'Add list'}\r\n                            action={this._onAddList}\r\n                            styleClass={'add_list_button'}/>\r\n                </div>\r\n                <div className={'app_lists_container'}>\r\n                    {viewComponent}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport style from './Loading.module.css';\r\n\r\nclass Loading extends React.Component {\r\n\r\n    _prevent = (e) => {\r\n        e.stopPropagation();\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div className={style.loadingdiv} onClick={(e) => this._prevent(e)}\r\n                 onDoubleClick={(e) => this._prevent(e)}>\r\n                <p>Loading data...</p>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading","import React from \"react\";\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport style from './Main.module.css';\r\nimport Auth from \"../Auth/Auth\";\r\nimport Registration from \"../Registration/Registration\";\r\nimport App from \"../App/App\";\r\nimport {API} from \"../../API/serverAPI\";\r\nimport Loading from \"../Loading/Loading\";\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isAuth: false,\r\n            isLoading: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._onSwitchLoadingData();\r\n        API.isAuth()\r\n            .then(res => {\r\n                if (this.state.isAuth === res.data.isAuth) {\r\n                    this._onSwitchLoadingData();\r\n                    return;\r\n                }\r\n                this._onSwitchLoadingData();\r\n                this.setState({isAuth: res.data.isAuth});\r\n            })\r\n            .catch(err => {\r\n                console.log('Auth DidMount err', err);\r\n                this.setState({isLoading: false});\r\n            })\r\n    }\r\n\r\n    _changeAuth = (isAuth) => {\r\n        if (this.state.isAuth === isAuth.isAuth) return;\r\n        this.setState({isAuth: isAuth.isAuth})\r\n    };\r\n\r\n    _onSwitchLoadingData = () => {\r\n        this.setState({isLoading: !this.state.isLoading})\r\n    };\r\n\r\n\r\n    render() {\r\n        const isAuth = this.state.isAuth;\r\n        const loadingView = this.state.isLoading ? <Loading/> : null;\r\n\r\n        return (\r\n            <div className={style.main_container}>\r\n                <h1>The todo list - application which help to save your time</h1>\r\n                <Switch>\r\n                    <Route exact path={'/'}>\r\n                        <Auth isAuth={isAuth} changeAuth={this._changeAuth}\r\n                              switchLoading={this._onSwitchLoadingData}/>\r\n                    </Route>\r\n                    <Route path={'/auth'}>\r\n                        <Auth isAuth={isAuth} changeAuth={this._changeAuth}\r\n                              switchLoading={this._onSwitchLoadingData}/>\r\n                    </Route>\r\n                    <Route path={'/registration'}>\r\n                        <Registration isAuth={isAuth} changeAuth={this._changeAuth}\r\n                                      switchLoading={this._onSwitchLoadingData}/>\r\n                    </Route>\r\n                    <Route path={'/app'}>\r\n                        <App isAuth={isAuth} changeAuth={this._changeAuth}\r\n                             switchLoading={this._onSwitchLoadingData}/>\r\n                    </Route>\r\n                </Switch>\r\n                {loadingView}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Main from \"./components/Main/Main\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(<BrowserRouter>\r\n    <Main />\r\n</BrowserRouter>, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContainer\":\"List_listContainer__3T59U\",\"proposal\":\"List_proposal__14Idr\",\"taskContainer\":\"List_taskContainer__391cq\",\"taskItem\":\"List_taskItem__3QaNr\",\"taskText\":\"List_taskText__1DRnb\",\"tasksFilter\":\"List_tasksFilter__3HJQi\",\"deleteList\":\"List_deleteList__28Sd6\"};"],"sourceRoot":""}